/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a security model where data access is generally restricted and requires authentication.
 *
 * Data Structure:
 * - /caregiver_profiles/{caregiverProfileId}: Stores caregiver profile information. Access is unrestricted.
 * - /appointments/{appointmentId}: Stores appointment slots. Access is unrestricted.
 * - /interviews/{interviewId}: Stores interview details. Access is unrestricted.
 * - /caregiver_employees/{employeeId}: Stores caregiver employment information. Access is unrestricted.
 *
 * Key Security Decisions:
 * - All collections allow public reads (get, list).
 * - All write operations (create, update, delete) are denied by default and require further authorization logic to be added.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows public reads for caregiver profiles. All write operations are currently denied.
     * @path /caregiver_profiles/{caregiverProfileId}
     * @allow (get, list) - Any user can read caregiver profiles.
     * @deny (create, update, delete) - All create, update, and delete operations are denied.
     * @principle Allows public read access to profiles while restricting modifications.
     */
    match /caregiver_profiles/{caregiverProfileId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public reads for appointments. All write operations are currently denied.
     * @path /appointments/{appointmentId}
     * @allow (get, list) - Any user can read appointments.
     * @deny (create, update, delete) - All create, update, and delete operations are denied.
     * @principle Allows public read access to appointments while restricting modifications.
     */
    match /appointments/{appointmentId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public reads for interviews. All write operations are currently denied.
     * @path /interviews/{interviewId}
     * @allow (get, list) - Any user can read interview data.
     * @deny (create, update, delete) - All create, update, and delete operations are denied.
     * @principle Allows public read access to interviews while restricting modifications.
     */
    match /interviews/{interviewId} {
        allow get, list: if true;
        allow create: if false;
        allow update: if false;
        allow delete: if false;
    }

    /**
     * @description Allows public reads for caregiver employee data. All write operations are currently denied.
     * @path /caregiver_employees/{employeeId}
     * @allow (get, list) - Any user can read caregiver employee data.
     * @deny (create, update, delete) - All create, update, and delete operations are denied.
     * @principle Allows public read access to caregiver employee data while restricting modifications.
     */
    match /caregiver_employees/{employeeId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}